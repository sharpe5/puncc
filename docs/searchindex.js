Search.setIndex({"docnames": ["api", "calibration", "classification", "conformalization", "getting_started", "index", "metrics", "nonconformity_scores", "plotting", "prediction", "prediction_sets", "regression", "splitting", "theory_overview", "utils"], "filenames": ["api.rst", "calibration.rst", "classification.rst", "conformalization.rst", "getting_started.rst", "index.rst", "metrics.rst", "nonconformity_scores.rst", "plotting.rst", "prediction.rst", "prediction_sets.rst", "regression.rst", "splitting.rst", "theory_overview.rst", "utils.rst"], "titles": ["\ud83d\udcbb API", "Calibration", "\ud83d\udcca Classification", "Conformalization", "\ud83d\ude80 Quickstart", "Welcome to puncc\u2019s documentation!", "\ud83d\udccf Metrics", "Nonconformity scores", "\ud83d\uddbc\ufe0f Plotting", "Prediction", "Prediction sets", "\ud83d\udcc8 Regression", "Splitting", "\ud83d\udcc8 Theory overview", "Utils"], "terms": {"The": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14], "low": 0, "level": [0, 1, 2, 3, 6, 11, 13], "offer": [0, 1], "more": [0, 1, 2, 4, 9, 11, 13], "flexibl": 0, "defin": [0, 1, 4, 5, 11, 12], "conform": [0, 1, 2, 5, 6, 7, 8, 10, 11], "predict": [0, 1, 2, 3, 5, 6, 7, 8, 11], "wrapper": [0, 2, 3, 4, 9, 11], "let": [0, 4, 13], "sai": 0, "we": [0, 1, 2, 4, 9, 11, 13, 14], "want": [0, 4, 9], "fit": [0, 1, 2, 3, 4, 9, 11, 12, 13], "neural": [0, 2, 13], "network": [0, 2], "interv": [0, 1, 2, 3, 4, 6, 8, 10, 11, 14], "estim": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14], "cross": [0, 11], "valid": [0, 11], "plan": 0, "experi": [0, 13], "differ": [0, 3, 4, 13], "user": [0, 1, 2, 11, 13], "nonconform": [0, 1, 2, 3, 4, 10, 11, 13], "score": [0, 1, 2, 3, 4, 10, 11, 13], "In": [0, 1, 4, 9, 13], "case": [0, 1, 3, 13], "other": [0, 4], "can": [0, 4, 5, 13], "fulli": 0, "construct": [0, 1, 4, 13], "us": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13], "propos": 0, "paradigm": 0, "It": [0, 5, 13], "boil": [0, 13], "down": [0, 13], "assembl": 0, "deel": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14], "puncc": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 14], "model": [0, 1, 2, 3, 5, 9, 11, 13], "an": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14], "A": [0, 9, 11, 12, 13], "strategi": [0, 3, 12], "assign": [0, 1, 12], "data": [0, 1, 2, 3, 5, 9, 11, 12, 13], "set": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14], "induct": [0, 4], "cp": [0, 2, 4, 11, 13], "crossvalcpaggreg": [0, 3], "basepredictor": [0, 2, 3, 4, 9, 11], "dualpredictor": [0, 3, 9, 11], "meanvarpredictor": [0, 9, 11], "basecalibr": [0, 1, 3, 7, 10], "cvpluscalibr": [0, 1], "split": [0, 2, 3, 4, 11], "basesplitt": [0, 3, 12], "idsplitt": [0, 12], "randomsplitt": [0, 12], "kfoldsplitt": [0, 3, 12], "util": [0, 2, 4, 9], "alpha_calib_check": [0, 14], "quantil": [0, 1, 7, 9, 10, 11, 14], "cqr_score": [0, 7], "mad": [0, 1, 3, 7], "raps_scor": [0, 7], "raps_score_build": [0, 7], "scaled_mad": [0, 7], "constant_interv": [0, 3, 10], "cqr_interv": [0, 10], "raps_set": [0, 10], "raps_set_build": [0, 10], "scaled_interv": [0, 10], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "canva": [0, 3], "procedur": [0, 3, 4, 13], "object": [0, 1, 2, 3, 9, 11], "instanc": [0, 3, 9], "explain": 0, "later": [0, 4], "import": [0, 1, 2, 3, 4, 8, 9, 11], "from": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14], "sklearn": [0, 2, 3, 4, 8, 9, 11], "linear_model": [0, 3, 4, 9], "regress": [0, 1, 2, 3, 5, 8, 9], "linear": [0, 3, 4], "linearregress": [0, 3, 4, 9], "definit": [0, 1, 3], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14], "my_predictor": 0, "built": [0, 3, 10], "given": [0, 3, 6, 7, 8, 9, 10, 12, 13], "build": [0, 2, 3, 7, 10, 13], "custom": 0, "function": [0, 1, 7, 8, 9, 10, 11, 12, 13], "altern": [0, 5], "sever": [0, 4, 6, 13], "readi": [0, 1], "nonconf": 0, "ar": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 13, 14], "provid": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12], "nonconformity_scor": [0, 1, 3, 7], "def": [0, 1, 2], "my_ncf": 0, "y_pred": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11], "y_true": [0, 1, 6, 7, 8, 10, 11], "return": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "np": [0, 1, 2, 4, 6, 8, 9, 11], "ab": [0, 1, 13], "prediction_set": [0, 1, 3, 10], "my_psf": 0, "nonconf_scores_quantil": 0, "y_lower": [0, 1, 3, 11], "y_upper": [0, 1, 3], "my_calibr": 0, "nonconf_score_func": [0, 1, 3], "pred_set_func": [0, 1, 3], "k": [0, 1, 3, 11, 12, 13], "fold": [0, 1, 3, 11, 12, 13], "produc": [0, 1, 3, 13], "20": [0, 2, 3, 8, 11], "kfold_splitt": [0, 3], "random_st": [0, 2, 3, 8, 9, 11, 12], "42": [0, 3], "conformal_predictor": [0, 3], "implement": [0, 1, 2, 4, 7, 10, 11, 12], "two": [0, 1, 4, 7, 8, 9, 10, 11, 13], "method": [0, 1, 2, 3, 4, 9, 11, 13, 14], "comput": [0, 1, 2, 3, 4, 6, 9, 10, 11, 13, 14], "accodingli": [], "x_train": [0, 2, 3, 4, 9, 11], "y_train": [0, 2, 3, 4, 9, 11], "full": 0, "train": [0, 1, 2, 3, 4, 9, 11, 12, 13], "dataset": [0, 1, 2, 3, 4, 8, 9, 11, 13, 14], "pass": [0, 1, 2, 8, 9, 11], "argument": [0, 1, 2, 4, 8, 9, 11], "base": [0, 1, 3, 9, 11, 13], "And": 0, "new": [0, 1, 2, 3, 4, 8, 9, 11, 13], "sampl": [0, 1, 2, 3, 4, 11, 12, 13, 14], "point": [0, 1, 3, 8, 9, 11, 12, 13], "y_pred_low": [0, 1, 4, 6, 8, 11], "y_pred_upp": [0, 4, 6, 8, 11], "w": [0, 1, 2, 3, 4, 11, 13, 14], "r": [0, 1, 2, 3, 4, 7, 11, 13], "t": [0, 1, 2, 3, 4, 9, 11, 13], "chosen": [0, 4], "error": [0, 5, 6, 13], "signific": [0, 1, 2, 3, 6, 11, 13], "alpha": [0, 1, 2, 3, 4, 5, 6, 10, 11, 13, 14], "coverag": [0, 2, 4, 6, 11, 13], "target": [0, 1, 2, 3, 4, 6, 11, 13, 14], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "90": [0, 4, 9], "x_new": [0, 9], "code": [0, 4, 9], "snippet": [0, 9], "previou": 0, "cvplu": [0, 11], "like": [0, 2, 3, 7, 9, 10, 13], "randomli": 0, "gener": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13], "below": [0, 1, 4, 9, 13], "make_regress": [0, 3, 8, 11], "model_select": [0, 2, 3, 11], "train_test_split": [0, 2, 3, 11], "plot": [0, 4, 5], "plot_prediction_interv": [0, 8], "metric": [0, 2, 4, 5, 11], "random": [0, 2, 3, 8, 9, 11, 12, 13], "problem": [0, 2, 3, 4, 5, 8, 11, 13], "x": [0, 1, 2, 3, 8, 9, 11, 12, 13], "y": [0, 2, 3, 8, 9, 11, 12, 13], "n_sampl": [0, 2, 3, 8, 11], "1000": [0, 2, 3, 9, 11], "n_featur": [0, 2, 3, 8, 11], "4": [0, 2, 3, 11], "n_inform": [0, 2, 3, 8, 11], "2": [0, 2, 3, 4, 8, 9, 11, 13], "0": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14], "shuffl": [0, 2, 3, 8, 11], "fals": [0, 2, 3, 4, 8, 9, 11, 14], "test": [0, 1, 2, 3, 4, 11, 13], "x_test": [0, 2, 3, 4, 11], "y_test": [0, 2, 3, 4, 11], "test_siz": [0, 2, 3, 11], "empir": [0, 4, 6, 13, 14], "margin": [0, 2, 4, 6, 10, 11, 13], "averag": [0, 2, 4, 6, 11, 13], "width": [0, 4, 6, 11, 13], "regression_mean_coverag": [0, 4, 6, 11], "regression_sharp": [0, 4, 6, 11], "print": [0, 2, 4, 11], "f": [0, 1, 2, 4, 9, 11, 13], "round": [0, 2, 4, 11], "figur": [0, 8], "band": 0, "sort_x": 0, "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "size": [0, 1, 2, 4, 6, 7, 8, 10, 13, 14], "10": [0, 1, 3, 8, 9], "6": 0, "loc": [0, 8], "upper": [0, 1, 3, 6, 8, 10, 11, 13], "left": [0, 13], "class": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12], "ml": [0, 2, 4, 9, 11], "dl": [0, 2, 4, 11], "aim": 0, "expos": [0, 9], "standard": [0, 4, 9], "interfac": [0, 7, 9, 10], "guarante": [0, 4, 5, 13], "complianc": [0, 2, 11], "framework": [0, 1, 13], "have": [0, 1, 3, 13], "take": [0, 1, 7, 10, 11], "iter": [0, 1, 2, 3, 7, 9, 10, 11, 12, 14], "collect": [0, 1, 3, 5, 14], "ndarrai": [0, 1, 3, 6, 8, 9, 10, 11, 14], "tensor": 0, "ani": [0, 5, 9, 13], "addit": [0, 4, 8, 13, 14], "configur": [0, 2, 3, 8, 9, 11], "underli": [0, 9, 11, 13], "e": [0, 2, 5, 9, 13], "g": [0, 2, 9, 13], "seed": [0, 8, 11, 12], "batch": [0, 9, 11], "copi": [0, 9], "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13], "ha": [0, 2, 4, 7, 10, 13, 14], "deepcopi": [0, 9], "constructor": [0, 1, 2, 4, 9, 11], "wrap": [0, 2, 4, 9, 11, 12], "flag": [0, 9], "inform": [0, 4, 9, 13], "alreadi": [0, 1, 4, 12], "compil": [0, 4, 9], "keyword": [0, 8, 9], "need": [0, 1, 2, 3, 4, 9, 11, 12, 13], "kera": [0, 2, 4, 9, 11], "conceptu": 0, "similar": [0, 9], "list": [0, 2, 9, 11, 12], "kwarg": [0, 2, 3, 9, 11], "Such": [0, 2, 4, 11], "when": [0, 1, 7, 10, 13, 14], "reli": [0, 13], "lower": [0, 1, 3, 6, 7, 8, 10, 11, 13], "cqr": [0, 7, 10, 11], "note": [0, 2, 4, 10, 13], "output": [0, 4, 5, 8], "coupl": [0, 7, 9], "where": [0, 7, 9, 10, 13], "first": [0, 1, 5, 8, 13], "resp": [0, 7, 9], "second": [0, 8, 9], "axi": [0, 8], "associ": [0, 1, 2, 3, 4, 7, 9, 10, 11, 13, 14], "specif": [0, 9, 13], "subclass": [0, 2, 9], "one": [0, 1, 4, 11, 12, 13], "absolut": [0, 1, 6, 7, 9, 13], "former": 0, "These": 0, "three": [0, 3, 4], "cover": [0, 4, 5], "plenti": 0, "But": [0, 9], "you": [0, 4, 5, 9], "special": 0, "even": 0, "creat": [0, 2, 4, 5, 8, 11], "scratch": [0, 1], "here": [0, 4, 9, 12], "situat": 0, "your": 0, "own": 0, "classif": [0, 1, 5, 9], "randomforestclassifi": [0, 2], "rap": [0, 2, 4, 7, 10], "classifi": [0, 2, 4, 9], "requir": [0, 3, 5, 9, 13, 14], "probabili": [], "each": [0, 1, 2, 3, 4, 9, 11, 12, 13], "onli": [0, 2, 4, 9], "most": [0, 2, 7, 10, 13], "which": [0, 2, 4, 7, 9, 10, 13], "redefin": [0, 2], "call": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13], "ensembl": [0, 2, 3, 9, 11], "rf": [0, 2, 11], "rf_model": [0, 2, 9, 11], "n_estim": [0, 2, 9, 11], "100": [0, 2, 4, 8, 9, 11], "forest": [0, 2, 9, 11], "its": [0, 2], "logit": [0, 2, 7, 10], "make": [0, 2, 4, 5], "sure": [0, 2, 5], "over": [0, 2, 9, 13], "becaus": [0, 2], "doe": [0, 2, 13], "otherwis": [0, 2, 6, 8, 13], "enough": [0, 2], "softmax": [0, 2, 4, 9], "rfpredictor": [0, 2], "self": [0, 2], "predict_proba": [0, 2], "newli": [0, 2], "rf_predictor": [0, 2, 11], "structur": [0, 1, 12], "At": [0, 13], "decid": 0, "Then": [0, 13], "mean": [0, 1, 7, 9, 11, 13], "deviat": [0, 1, 7, 9, 13], "enabl": [0, 3, 9], "For": [0, 2, 4, 7, 9, 10, 11, 13], "constant": [0, 10, 13], "respect": [0, 1, 2, 9, 11, 13], "them": [0, 13], "motiv": 0, "criteria": 0, "avail": 0, "resourc": 0, "If": [0, 2, 3, 6, 7, 9, 10, 13, 14], "qualiti": 0, "abund": 0, "disjoint": [0, 1], "subset": [0, 1, 4, 12], "d_": [0, 4, 13], "calib": [0, 1, 4], "scarc": 0, "prefer": 0, "ressourc": 13, "consum": 0, "agnost": [0, 13], "datafram": 0, "equal": [0, 14], "identifi": [0, 2, 7, 10], "leav": [0, 11, 13], "out": [0, 11, 13], "additionnali": [0, 8], "implemt": [], "obtain": [0, 4, 13], "asign": 0, "modul": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11], "core": 1, "weight_func": [1, 11], "none": [1, 3, 8, 9, 11, 12, 14], "": [1, 2, 3, 4, 6, 9, 11, 13], "paramet": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14], "callabl": [1, 7, 10, 11], "arrai": [1, 9, 11, 12], "featur": [1, 2, 3, 4, 9, 11, 12], "weight": [1, 2, 3, 7, 10, 11, 14], "default": [1, 2, 3, 9, 11, 14], "rais": [1, 3, 9, 11, 14], "notimplementederror": [1, 9, 14], "weight_method": 1, "suitabl": 1, "consid": [1, 4, 7, 9, 10, 14], "pretrain": 1, "hat": [1, 9], "x_": [1, 9, 13], "y_": [1, 6, 7, 9, 10, 13], "pred": [1, 7, 10], "befor": [1, 3, 4], "instanti": [1, 3, 4, 9], "how": [1, 9, 12], "api": [1, 2, 3, 4, 5, 7, 9, 10, 11, 14], "numpi": [1, 2, 4, 8, 9], "valu": [1, 6, 8, 9, 13, 14], "label": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12], "reimplement": 1, "nonconformity_funct": 1, "fix": 1, "around": [1, 4], "prediction_set_funct": 1, "scores_quantil": [1, 10], "y_lo": 1, "y_hi": 1, "abov": [1, 4, 13], "y_pred_calib": 1, "y_true_calib": 1, "bound": [1, 3, 6, 8, 11, 13], "risk": [1, 3], "y_pred_high": 1, "y_pred_test": 1, "static": [1, 3], "barber_weight": 1, "normal": [1, 3, 8, 13], "infer": [1, 2, 11, 13], "distribut": [1, 4, 13], "barber": [1, 13], "et": [1, 11], "al": [1, 11], "type": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14], "float": [1, 2, 3, 6, 7, 10, 11, 12, 14], "max": [1, 3, 6, 7, 13], "miscoverag": [1, 2, 3, 6, 11], "all": [1, 4, 8, 13], "equiprob": 1, "tupl": [1, 2, 3, 6, 9, 10, 11, 12], "runtimeerror": [1, 3, 9, 11], "valueerror": [1, 14], "fail": 1, "check": [1, 4, 9, 14], "store": [1, 11, 13], "get_nonconformity_scor": [1, 3, 11], "getter": [1, 3], "get_norm_weight": 1, "set_norm_weight": 1, "norm_weight": 1, "setter": 1, "kfold_calibr": 1, "meta": 1, "combin": [1, 3, 9, 13], "cv": [1, 3], "kfold_calibrators_dict": 1, "dict": [1, 2, 3, 9, 11], "priorli": 1, "kfold_predictors_dict": 1, "dictionnari": [1, 3, 4], "predictor": [1, 2, 3, 4, 9, 11, 13], "maximum": [1, 2, 11, 13], "been": [1, 13], "did": 1, "current": [2, 3, 5, 9, 11], "page": [2, 4, 11, 13], "ensur": [2, 11], "variou": [2, 4, 11, 13], "librari": [2, 4, 5, 9, 11], "scikit": [2, 4, 9, 11], "learn": [2, 4, 9, 11, 13], "lambd": [2, 4, 7, 10], "k_reg": [2, 7, 10], "regular": [2, 4, 7, 10], "adapt": [2, 11], "hyperparamet": [2, 7, 10], "lambda": [2, 4, 7, 10, 11], "k_": [2, 4, 7, 10], "reg": [2, 4, 7, 10], "encourag": [2, 4, 7, 10], "small": [2, 7, 10, 13], "detail": [2, 4, 9, 11], "refer": [2, 11], "theori": [2, 5, 11], "overview": [2, 5, 11], "bool": [2, 3, 9, 14], "posit": [2, 6, 7, 10], "term": [2, 4, 7, 10], "ap": [2, 4, 7, 10], "rank": [2, 7, 10], "order": [2, 7, 10, 14], "descend": [2, 7, 10], "probabl": [0, 2, 7, 10, 13], "start": [2, 4, 7, 10], "appli": [2, 4, 7, 10], "3": [2, 4, 7, 10], "fourth": [2, 7, 10], "extra": [2, 7, 10], "penalti": [2, 7, 10], "make_classif": 2, "classification_mean_coverag": [2, 4, 6], "classification_mean_s": [2, 4, 6], "tensorflow": [2, 4, 9], "to_categor": [2, 4, 9], "n_class": 2, "calibr": [2, 3, 4, 7, 10, 11, 12, 13, 14], "x_fit": [2, 4, 11, 12], "x_calib": [2, 4, 11, 12], "y_fit": [2, 4, 11, 12], "y_calib": [2, 4, 11, 12], "One": [2, 4], "hot": [2, 4], "encod": [2, 4], "y_fit_cat": [2, 4], "y_calib_cat": [2, 4], "y_test_cat": [2, 4], "initi": [2, 4, 7, 10, 11], "raps_cp": 2, "set_pr": [2, 4, 6], "compos": [2, 4, 9, 11], "aps_cp": [2, 4], "conformalpredictor": 3, "splitter": [3, 12], "str": [3, 9], "handl": 3, "follow": [3, 4, 9, 13], "re": 3, "attribut": 3, "except": [3, 13], "dure": [3, 9, 13], "compon": 3, "previous": [3, 9], "our": [3, 4, 9, 13], "choic": 3, "yield": [3, 9, 13], "besid": [3, 9], "aggreg": [3, 11], "so": [3, 9, 13], "oper": 3, "separ": 3, "thereaft": 3, "accordingli": [0, 3], "option": [3, 8, 9], "inconsist": [3, 14], "between": [3, 6], "statu": 3, "dictionari": 3, "index": 3, "get_weight": 3, "load": [3, 4], "path": 3, "file": 3, "y_higher": [3, 11], "save": [3, 4], "serial": 3, "write": 3, "int": [3, 11, 12, 14], "number": [3, 4, 6, 11, 12], "_predictor": 3, "_calibr": 3, "append_calibr": 3, "kei": 3, "add": [3, 5, 9], "kfold": [3, 11, 12], "append": 3, "append_predictor": 3, "get": [3, 11, 13], "residu": [3, 4, 11, 13], "variabl": [3, 13], "simpl": [4, 9], "diabet": 4, "evalu": 4, "uncertainti": [4, 5], "By": [4, 14], "indep": 4, "ident": [4, 12], "d": [4, 5, 13], "offici": 4, "document": 4, "great": 4, "fullfil": 4, "exchang": [4, 5, 13], "condit": [4, 9, 11, 13, 14], "next": 4, "step": [4, 13], "splite": 4, "cal": [4, 9], "rigor": [4, 5, 13], "probabilist": 4, "hold": [4, 13], "aforement": 4, "diabetes_x": 4, "diabetes_i": 4, "load_diabet": 4, "return_x_i": 4, "newaxi": 4, "lin_reg_model": 4, "possibl": 4, "xgboost": 4, "about": 4, "support": [4, 9], "checkout": 4, "earlier": 4, "lin_reg_predictor": 4, "throught": 4, "splitcp": [4, 11], "present": [4, 13], "instanci": 4, "time": [4, 13], "split_cp": [4, 11], "tool": 4, "visual": 4, "whether": 4, "observ": [4, 6, 13], "long": 4, "run": 4, "includ": 4, "tackl": 4, "classic": 4, "mnist": 4, "handwritten": 4, "digit": 4, "goal": 4, "through": [4, 13], "contain": [4, 9, 13], "larg": 4, "imag": 4, "As": [4, 13], "process": [4, 13], "post": [4, 13], "applic": [4, 13], "preprocess": 4, "databas": 4, "load_data": 4, "reshap": 4, "len": [4, 8], "28": 4, "astyp": 4, "float32": 4, "255": 4, "50000": 4, "convnet": 4, "layer": [4, 9], "convolut": 4, "pool": 4, "dens": [4, 9], "nn_model": 4, "sequenti": [4, 9], "input": 4, "shape": [4, 9], "input_shap": 4, "conv2d": 4, "32": [4, 9, 13], "kernel_s": 4, "activ": [4, 9], "relu": [4, 9], "maxpooling2d": 4, "pool_siz": 4, "64": [4, 13], "flatten": 4, "dropout": 4, "5": [4, 9], "num_class": 4, "is_train": [4, 9, 11], "config": 4, "gather": 4, "compile_kwarg": [4, 9], "optim": [4, 9], "adam": 4, "loss": [4, 9, 11], "categorical_crossentropi": [4, 9], "accuraci": 4, "class_predictor": 4, "algorithm": [4, 5, 9, 13], "hyparamet": 4, "smaller": 4, "To": [4, 7, 9, 10], "off": [4, 9], "gentli": 4, "ignor": 4, "simpli": [4, 13], "turn": [4, 9], "fit_kwarg": 4, "epoch": [4, 9], "15": [4, 8], "batch_siz": [4, 9], "128": [4, 9], "validation_split": 4, "verbos": [4, 9], "mean_coverag": 4, "mean_siz": 4, "quantif": [], "quickstart": 5, "locallyadaptivecp": 11, "enbpi": 11, "adaptiveenbpi": 11, "regression_ac": 6, "open": [5, 14], "sourc": [5, 13], "ad": [], "hoc": [], "integr": 5, "theoret": 13, "sound": [], "region": 13, "nomin": 6, "clone": [5, 9], "repo": 5, "git": 5, "ssh": [], "forg": [], "ai": 5, "22012": [], "statist": 13, "recommend": [], "virtual": 5, "environ": 5, "virtualenv": [], "done": [], "pip": 5, "name": [5, 13], "env": 5, "under": 5, "mac": [], "o": [], "linux": [], "bin": [], "now": [], "interact": 5, "develop": [], "dev": 5, "final": 5, "jupyt": 5, "notebook": 5, "python": 5, "m": [5, 9, 13], "ipykernel": 5, "th": [6, 9, 13, 14], "x_i": [6, 9, 13], "cov": 6, "With": [6, 13], "n": [6, 9, 13, 14], "sum_": 6, "compt": 6, "ac": 6, "distanc": 6, "strictli": 6, "neg": 6, "undercov": [6, 13], "magin": 6, "conserv": 6, "c": [5, 6, 7, 10, 13], "text": [7, 10, 13], "q_": [7, 10], "lo": [7, 10, 13], "hi": [7, 10, 13], "higher": [7, 13], "signatur": [7, 10], "incompat": [7, 10], "properli": [7, 10], "p_": [7, 10, 13], "_1": [7, 9, 10], "_n": [7, 10], "_i": [7, 10], "builder": [7, 10], "initialit": [7, 10], "scale": [7, 8, 10, 13], "mu_": [7, 10], "sigma_": [7, 10], "frac": [7, 13], "ax": 8, "fig_kw": 8, "whose": 8, "also": [8, 9, 13], "displai": 8, "absciss": 8, "vector": [8, 14], "matplotlib": 8, "correspond": [8, 9], "pyplot": 8, "updat": [8, 11], "dummi": 8, "120": 8, "figsiz": 8, "best": [8, 13], "plt": 8, "nois": 8, "y_pred_lower1": 8, "y_pred_upper1": 8, "y_pred_lower2": 8, "y_pred_upper2": 8, "grid": 8, "fig": 8, "subplot": 8, "nrow": 8, "boolean": 9, "pre": 9, "skip": 9, "randomforestregressor": [9, 11], "uniform": 9, "sin": 9, "tree": 9, "rf_model1": 9, "rf_model2": 9, "predictor1": 9, "predictor2": 9, "don": 9, "retrain": 9, "specifi": 9, "No": 9, "do": [9, 13], "y_pred1": 9, "y_pred2": 9, "tf": 9, "expand_dim": 9, "els": 9, "cl_model": 9, "intern": [9, 13], "categor": [9, 13], "crossentropi": 9, "rmsprop": 9, "either": 9, "unsupport": 9, "compile_arg": 9, "joint": [9, 13], "f_1": 9, "f_2": 9, "_2": 9, "tensorflow_addon": 9, "tfa": 9, "q_model": 9, "pinball_loss": 9, "pinballloss": 9, "tau": 9, "9": 9, "sgd": 9, "regressor": [9, 11], "tf_predictor": 9, "wherea": 9, "consist": [9, 14], "y1": 9, "y2": 9, "matrix": 9, "dictarg": 9, "format": 9, "mu": [9, 11], "dispers": [9, 11, 13], "sigma": [9, 11, 13], "leftarrow": 9, "param": 9, "mu_model": [9, 11], "sigma_model": [9, 11], "random_se": 9, "select": 9, "mean_var_predictor": [9, 11], "choos": [9, 13], "see": 9, "center": [10, 13], "gamma_": 10, "proport": 10, "cdot": [10, 13, 14], "nonconfom": 11, "local": 11, "must": [11, 14], "emb": 11, "varianc": 11, "lacp": 11, "gradientboostingregressor": 11, "regressor_q_low": 11, "250": 11, "regressor_q_hi": 11, "crq": 11, "plu": 11, "control": [11, 12], "cv_cp": 11, "scheme": [11, 13], "bag": 11, "per": 11, "b": 11, "agg_func_loo": 11, "bootstrap": 11, "func": 11, "loo": [11, 13], "determin": 11, "xu": 11, "v1": 11, "arg": 11, "v2": 11, "30": 11, "oob": 11, "empti": 11, "season": 11, "perform": [11, 13], "onlin": 11, "necessari": 11, "sequenc": 11, "pi": 11, "version": [11, 13], "mean_model": 11, "aenbpi": 11, "helper": 12, "abstract": 12, "exist": [12, 13], "__call__": 12, "Not": 12, "just": 12, "placehold": 12, "interoper": 12, "determinist": 12, "ratio": 12, "iterabl": 12, "machin": 13, "right": 13, "approach": 13, "access": 13, "via": 13, "despit": 13, "effort": 13, "encount": 13, "some": [13, 14], "could": 13, "stem": 13, "caus": 13, "typic": 13, "aleator": 13, "known": 13, "irreduc": 13, "due": 13, "intrins": 13, "phenomenon": 13, "being": 13, "epistem": 13, "systemat": 13, "reduc": 13, "better": 13, "depend": 13, "field": 13, "major": 13, "impact": 13, "safeti": 13, "free": 13, "non": 13, "asymptot": 13, "rate": 13, "y_i": 13, "_": 13, "mathbb": 13, "p": [5, 13], "xy": 13, "big": 13, "geq": 13, "mani": 13, "frequenc": 13, "least": 13, "within": [5, 13], "inequ": 13, "finit": 13, "noteworthi": 13, "therefor": 13, "conditionnali": [], "space": 13, "act": 13, "attain": 13, "after": 13, "black": 13, "box": 13, "common": 13, "literatur": 13, "angelopoulo": 13, "bate": 13, "angelopoulos2022": 13, "hand": 13, "introduct": 13, "awesom": 13, "github": [5, 13], "xi": [], "yi": [], "n_": 13, "sim": 13, "papadopoulos2002": 13, "lei2018": 13, "widehat": 13, "summar": 13, "pick": 13, "bar": 13, "r_i": 13, "dot": 13, "cardin": 13, "delta_": 13, "litteratur": [], "hereaft": 13, "papadopoulos2008": 13, "measur": 13, "usual": 13, "again": 13, "heteroskedasc": 13, "improv": 13, "price": 13, "cost": 13, "proper": 13, "extend": 13, "q": [13, 14], "alpha_": 13, "romano2019": 13, "correct": 13, "effici": [], "2021": 13, "gentl": 13, "arxiv": 13, "preprint": 13, "2107": 13, "07511": 13, "romano": 13, "patterson": 13, "cand": 13, "2019": 13, "advanc": 13, "system": 13, "papadopoulo": 13, "h": 13, "gammerman": 13, "vovk": 13, "v": 13, "2008": 13, "februari": 13, "proceed": 13, "iast": 13, "confer": 13, "artifici": 13, "intellig": 13, "aia": 13, "pp": 13, "69": 13, "proedrou": 13, "2002": 13, "confid": 13, "ecml": 13, "13th": 13, "european": 13, "helsinki": 13, "finland": 13, "august": 13, "19": 13, "23": 13, "13": 13, "345": 13, "356": 13, "springer": 13, "berlin": 13, "heidelberg": 13, "lei": 13, "j": 13, "sell": 13, "rinaldo": 13, "tibshirani": 13, "wasserman": 13, "l": 13, "2018": 13, "journal": 13, "american": 13, "113": 13, "523": 13, "1094": 13, "1111": 13, "complement_check": 14, "inflat": 14, "factor": 14, "deriv": 14, "impli": 14, "complementari": 14, "jk": 14, "unidimension": 14, "http": [5, 13], "com": 5, "makefil": 5, "automat": 5, "bash": [], "prepar": 5, "redict": 5, "un": 5, "certainti": 5, "alibr": 5, "onform": 5, "state": 5, "art": 5, "relat": 5, "techniqu": 5, "condition": 13, "would": 13, "05": 13, "95": 13, "evenli": 13, "misspecifi": 13, "bad": 13, "approxim": 13, "well": 13, "were": 13, "strong": 13, "properti": 13, "inherit": 13, "accur": 13, "shown": 13, "partit": 13, "principl": 13, "barber2021": 13, "introduc": 13, "jp": 13, "dedic": 13, "goe": 13, "disjointli": 13, "s_1": 13, "s_2": 13, "s_k": 13, "belong": 13, "s_": 13, "memori": 13, "indic": 13, "wa": 13, "those": 13, "lfloor": 13, "rfloor": 13, "smallest": 13, "u": 13, "lceil": 13, "rceil": 13, "org": 13, "ramda": 13, "ann": 13, "49": 13, "486": 13, "507": 13, "1905": 13, "02928": 13, "1604": 13, "04173": 13, "03222": 13, "xu2021": [], "xie": [], "dynam": [], "seri": [], "38th": [], "mlr": [], "press": [], "v139": [], "xu21h": [], "html": [], "tbc": 13, "br": [], "raw": []}, "objects": {"": [[1, 0, 0, "-", "calibration"], [3, 0, 0, "-", "conformalization"], [6, 0, 0, "-", "metrics"], [7, 0, 0, "-", "nonconformity_scores"], [8, 0, 0, "-", "plotting"], [9, 0, 0, "-", "prediction"], [10, 0, 0, "-", "prediction_sets"]], "calibration": [[1, 1, 1, "", "BaseCalibrator"], [1, 1, 1, "", "CvPlusCalibrator"]], "calibration.BaseCalibrator": [[1, 2, 1, "", "barber_weights"], [1, 2, 1, "", "calibrate"], [1, 2, 1, "", "fit"], [1, 2, 1, "", "get_nonconformity_scores"], [1, 2, 1, "", "get_norm_weights"], [1, 2, 1, "", "set_norm_weights"]], "calibration.CvPlusCalibrator": [[1, 2, 1, "", "calibrate"], [1, 2, 1, "", "fit"]], "conformalization": [[3, 1, 1, "", "ConformalPredictor"], [3, 1, 1, "", "CrossValCpAggregator"]], "conformalization.ConformalPredictor": [[3, 2, 1, "", "fit"], [3, 2, 1, "", "get_nonconformity_scores"], [3, 2, 1, "", "get_weights"], [3, 2, 1, "", "load"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "save"]], "conformalization.CrossValCpAggregator": [[3, 2, 1, "", "append_calibrator"], [3, 2, 1, "", "append_predictor"], [3, 2, 1, "", "get_nonconformity_scores"], [3, 2, 1, "", "get_weights"], [3, 2, 1, "", "predict"]], "deel.puncc.api.utils": [[14, 3, 1, "", "alpha_calib_check"], [14, 3, 1, "", "quantile"]], "deel.puncc.classification": [[2, 1, 1, "", "APS"], [2, 1, 1, "", "RAPS"]], "deel.puncc.classification.APS": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "predict"]], "deel.puncc.classification.RAPS": [[2, 2, 1, "", "fit"], [2, 2, 1, "", "predict"]], "deel.puncc.regression": [[11, 1, 1, "", "AdaptiveEnbPI"], [11, 1, 1, "", "CQR"], [11, 1, 1, "", "CVPlus"], [11, 1, 1, "", "EnbPI"], [11, 1, 1, "", "LocallyAdaptiveCP"], [11, 1, 1, "", "SplitCP"]], "deel.puncc.regression.AdaptiveEnbPI": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"]], "deel.puncc.regression.CQR": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "get_nonconformity_scores"], [11, 2, 1, "", "predict"]], "deel.puncc.regression.CVPlus": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "get_nonconformity_scores"], [11, 2, 1, "", "predict"]], "deel.puncc.regression.EnbPI": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "predict"]], "deel.puncc.regression.LocallyAdaptiveCP": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "get_nonconformity_scores"], [11, 2, 1, "", "predict"]], "deel.puncc.regression.SplitCP": [[11, 2, 1, "", "fit"], [11, 2, 1, "", "get_nonconformity_scores"], [11, 2, 1, "", "predict"]], "metrics": [[6, 3, 1, "", "classification_mean_coverage"], [6, 3, 1, "", "classification_mean_size"], [6, 3, 1, "", "regression_ace"], [6, 3, 1, "", "regression_mean_coverage"], [6, 3, 1, "", "regression_sharpness"]], "nonconformity_scores": [[7, 3, 1, "", "cqr_score"], [7, 3, 1, "", "mad"], [7, 3, 1, "", "raps_score"], [7, 3, 1, "", "raps_score_builder"], [7, 3, 1, "", "scaled_mad"]], "plotting": [[8, 3, 1, "", "plot_prediction_intervals"]], "prediction": [[9, 1, 1, "", "BasePredictor"], [9, 1, 1, "", "DualPredictor"], [9, 1, 1, "", "MeanVarPredictor"]], "prediction.BasePredictor": [[9, 2, 1, "", "copy"], [9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"]], "prediction.DualPredictor": [[9, 2, 1, "", "copy"], [9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"]], "prediction.MeanVarPredictor": [[9, 2, 1, "", "copy"], [9, 2, 1, "", "fit"], [9, 2, 1, "", "predict"]], "prediction_sets": [[10, 3, 1, "", "constant_interval"], [10, 3, 1, "", "cqr_interval"], [10, 3, 1, "", "raps_set"], [10, 3, 1, "", "raps_set_builder"], [10, 3, 1, "", "scaled_interval"]], "splitting": [[12, 1, 1, "", "BaseSplitter"], [12, 1, 1, "", "IdSplitter"], [12, 1, 1, "", "KFoldSplitter"], [12, 1, 1, "", "RandomSplitter"]], "splitting.IdSplitter": [[12, 2, 1, "", "__call__"]], "splitting.KFoldSplitter": [[12, 2, 1, "", "__call__"]], "splitting.RandomSplitter": [[12, 2, 1, "", "__call__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "tabl": [0, 4], "content": [0, 4, 5], "": [0, 5], "modul": 0, "overview": [0, 13], "conformalpredictor": 0, "predictor": 0, "calibr": [0, 1], "splitter": 0, "classif": [2, 4, 13], "conform": [3, 4, 13], "quickstart": 4, "regress": [4, 11, 13], "data": 4, "predict": [4, 9, 10, 13], "model": 4, "welcom": 5, "puncc": 5, "document": 5, "instal": 5, "metric": 6, "nonconform": 7, "score": 7, "plot": 8, "set": [10, 13], "split": [12, 13], "theori": 13, "uncertainti": 13, "quantif": 13, "induct": 13, "local": 13, "adapt": 13, "quantil": 13, "cqr": 13, "cross": 13, "valid": 13, "cv": 13, "ensembl": 13, "batch": 13, "interv": 13, "enbpi": 13, "ap": 13, "regular": 13, "rap": 13, "refer": 13, "util": 14, "For": 5, "user": 5, "developp": 5, "jackknif": 13, "summari": [], "guarante": []}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"\ud83d\udcbb API": [[0, "api"]], "Table of Contents": [[0, "table-of-contents"], [4, "table-of-contents"]], "API\u2019s Modules": [[0, "api-s-modules"]], "Overview": [[0, "overview"]], "ConformalPredictor": [[0, "conformalpredictor"]], "Predictor": [[0, "predictor"]], "Calibrator": [[0, "calibrator"]], "Splitter": [[0, "splitter"]], "Calibration": [[1, "calibration"]], "\ud83d\udcca Classification": [[2, "classification"]], "Conformalization": [[3, "module-conformalization"]], "\ud83d\ude80 Quickstart": [[4, "quickstart"]], "Conformal Regression": [[4, "conformal-regression"], [13, "conformal-regression"]], "Data": [[4, "data"], [4, "id1"]], "Prediction model": [[4, "prediction-model"]], "Conformal prediction": [[4, "conformal-prediction"]], "Conformal Classification": [[4, "conformal-classification"], [13, "conformal-classification"]], "Prediction Model": [[4, "id2"]], "Conformal classification": [[4, "id3"]], "Welcome to puncc\u2019s documentation!": [[5, "welcome-to-puncc-s-documentation"]], "Installation": [[5, "installation"]], "For users": [[5, "for-users"]], "For developpers": [[5, "for-developpers"]], "Contents": [[5, null]], "\ud83d\udccf Metrics": [[6, "module-metrics"]], "Nonconformity scores": [[7, "module-nonconformity_scores"]], "\ud83d\uddbc\ufe0f Plotting": [[8, "module-plotting"]], "Prediction": [[9, "prediction"]], "Prediction sets": [[10, "module-prediction_sets"]], "\ud83d\udcc8 Regression": [[11, "regression"]], "Splitting": [[12, "splitting"]], "\ud83d\udcc8 Theory overview": [[13, "theory-overview"]], "Uncertainty Quantification": [[13, "uncertainty-quantification"]], "Conformal Prediction": [[13, "conformal-prediction"]], "Split (inductive) Conformal": [[13, "split-inductive-conformal"]], "Locally Adaptive Conformal Regression": [[13, "locally-adaptive-conformal-regression"]], "Conformalized Quantile Regression (CQR)": [[13, "conformalized-quantile-regression-cqr"]], "Cross-validation+ (CV+), Jackknife+": [[13, "cross-validation-cv-jackknife"]], "Ensemble Batch Prediction Intervals (EnbPI)": [[13, "ensemble-batch-prediction-intervals-enbpi"]], "Adaptive Prediction Sets (APS)": [[13, "adaptive-prediction-sets-aps"]], "Regularized Adaptive Prediction Sets (RAPS)": [[13, "regularized-adaptive-prediction-sets-raps"]], "References": [[13, "references"]], "Utils": [[14, "utils"]]}, "indexentries": {"basecalibrator (class in calibration)": [[1, "calibration.BaseCalibrator"]], "cvpluscalibrator (class in calibration)": [[1, "calibration.CvPlusCalibrator"]], "barber_weights() (calibration.basecalibrator static method)": [[1, "calibration.BaseCalibrator.barber_weights"]], "calibrate() (calibration.basecalibrator method)": [[1, "calibration.BaseCalibrator.calibrate"]], "calibrate() (calibration.cvpluscalibrator method)": [[1, "calibration.CvPlusCalibrator.calibrate"]], "calibration": [[1, "module-calibration"]], "fit() (calibration.basecalibrator method)": [[1, "calibration.BaseCalibrator.fit"]], "fit() (calibration.cvpluscalibrator method)": [[1, "calibration.CvPlusCalibrator.fit"]], "get_nonconformity_scores() (calibration.basecalibrator method)": [[1, "calibration.BaseCalibrator.get_nonconformity_scores"]], "get_norm_weights() (calibration.basecalibrator method)": [[1, "calibration.BaseCalibrator.get_norm_weights"]], "module": [[1, "module-calibration"], [3, "module-conformalization"], [6, "module-metrics"], [7, "module-nonconformity_scores"], [8, "module-plotting"], [9, "module-prediction"], [10, "module-prediction_sets"]], "set_norm_weights() (calibration.basecalibrator method)": [[1, "calibration.BaseCalibrator.set_norm_weights"]], "aps (class in deel.puncc.classification)": [[2, "deel.puncc.classification.APS"]], "raps (class in deel.puncc.classification)": [[2, "deel.puncc.classification.RAPS"]], "fit() (deel.puncc.classification.aps method)": [[2, "deel.puncc.classification.APS.fit"]], "fit() (deel.puncc.classification.raps method)": [[2, "deel.puncc.classification.RAPS.fit"]], "predict() (deel.puncc.classification.aps method)": [[2, "deel.puncc.classification.APS.predict"]], "predict() (deel.puncc.classification.raps method)": [[2, "deel.puncc.classification.RAPS.predict"]], "conformalpredictor (class in conformalization)": [[3, "conformalization.ConformalPredictor"]], "crossvalcpaggregator (class in conformalization)": [[3, "conformalization.CrossValCpAggregator"]], "append_calibrator() (conformalization.crossvalcpaggregator method)": [[3, "conformalization.CrossValCpAggregator.append_calibrator"]], "append_predictor() (conformalization.crossvalcpaggregator method)": [[3, "conformalization.CrossValCpAggregator.append_predictor"]], "conformalization": [[3, "module-conformalization"]], "fit() (conformalization.conformalpredictor method)": [[3, "conformalization.ConformalPredictor.fit"]], "get_nonconformity_scores() (conformalization.conformalpredictor method)": [[3, "conformalization.ConformalPredictor.get_nonconformity_scores"]], "get_nonconformity_scores() (conformalization.crossvalcpaggregator method)": [[3, "conformalization.CrossValCpAggregator.get_nonconformity_scores"]], "get_weights() (conformalization.conformalpredictor method)": [[3, "conformalization.ConformalPredictor.get_weights"]], "get_weights() (conformalization.crossvalcpaggregator method)": [[3, "conformalization.CrossValCpAggregator.get_weights"]], "load() (conformalization.conformalpredictor static method)": [[3, "conformalization.ConformalPredictor.load"]], "predict() (conformalization.conformalpredictor method)": [[3, "conformalization.ConformalPredictor.predict"]], "predict() (conformalization.crossvalcpaggregator method)": [[3, "conformalization.CrossValCpAggregator.predict"]], "save() (conformalization.conformalpredictor method)": [[3, "conformalization.ConformalPredictor.save"]], "classification_mean_coverage() (in module metrics)": [[6, "metrics.classification_mean_coverage"]], "classification_mean_size() (in module metrics)": [[6, "metrics.classification_mean_size"]], "metrics": [[6, "module-metrics"]], "regression_ace() (in module metrics)": [[6, "metrics.regression_ace"]], "regression_mean_coverage() (in module metrics)": [[6, "metrics.regression_mean_coverage"]], "regression_sharpness() (in module metrics)": [[6, "metrics.regression_sharpness"]], "cqr_score() (in module nonconformity_scores)": [[7, "nonconformity_scores.cqr_score"]], "mad() (in module nonconformity_scores)": [[7, "nonconformity_scores.mad"]], "nonconformity_scores": [[7, "module-nonconformity_scores"]], "raps_score() (in module nonconformity_scores)": [[7, "nonconformity_scores.raps_score"]], "raps_score_builder() (in module nonconformity_scores)": [[7, "nonconformity_scores.raps_score_builder"]], "scaled_mad() (in module nonconformity_scores)": [[7, "nonconformity_scores.scaled_mad"]], "plot_prediction_intervals() (in module plotting)": [[8, "plotting.plot_prediction_intervals"]], "plotting": [[8, "module-plotting"]], "basepredictor (class in prediction)": [[9, "prediction.BasePredictor"]], "dualpredictor (class in prediction)": [[9, "prediction.DualPredictor"]], "meanvarpredictor (class in prediction)": [[9, "prediction.MeanVarPredictor"]], "copy() (prediction.basepredictor method)": [[9, "prediction.BasePredictor.copy"]], "copy() (prediction.dualpredictor method)": [[9, "prediction.DualPredictor.copy"]], "copy() (prediction.meanvarpredictor method)": [[9, "prediction.MeanVarPredictor.copy"]], "fit() (prediction.basepredictor method)": [[9, "prediction.BasePredictor.fit"]], "fit() (prediction.dualpredictor method)": [[9, "prediction.DualPredictor.fit"]], "fit() (prediction.meanvarpredictor method)": [[9, "prediction.MeanVarPredictor.fit"]], "predict() (prediction.basepredictor method)": [[9, "prediction.BasePredictor.predict"]], "predict() (prediction.dualpredictor method)": [[9, "prediction.DualPredictor.predict"]], "predict() (prediction.meanvarpredictor method)": [[9, "prediction.MeanVarPredictor.predict"]], "prediction": [[9, "module-prediction"]], "constant_interval() (in module prediction_sets)": [[10, "prediction_sets.constant_interval"]], "cqr_interval() (in module prediction_sets)": [[10, "prediction_sets.cqr_interval"]], "prediction_sets": [[10, "module-prediction_sets"]], "raps_set() (in module prediction_sets)": [[10, "prediction_sets.raps_set"]], "raps_set_builder() (in module prediction_sets)": [[10, "prediction_sets.raps_set_builder"]], "scaled_interval() (in module prediction_sets)": [[10, "prediction_sets.scaled_interval"]], "adaptiveenbpi (class in deel.puncc.regression)": [[11, "deel.puncc.regression.AdaptiveEnbPI"]], "cqr (class in deel.puncc.regression)": [[11, "deel.puncc.regression.CQR"]], "cvplus (class in deel.puncc.regression)": [[11, "deel.puncc.regression.CVPlus"]], "enbpi (class in deel.puncc.regression)": [[11, "deel.puncc.regression.EnbPI"]], "locallyadaptivecp (class in deel.puncc.regression)": [[11, "deel.puncc.regression.LocallyAdaptiveCP"]], "splitcp (class in deel.puncc.regression)": [[11, "deel.puncc.regression.SplitCP"]], "fit() (deel.puncc.regression.adaptiveenbpi method)": [[11, "deel.puncc.regression.AdaptiveEnbPI.fit"]], "fit() (deel.puncc.regression.cqr method)": [[11, "deel.puncc.regression.CQR.fit"]], "fit() (deel.puncc.regression.cvplus method)": [[11, "deel.puncc.regression.CVPlus.fit"]], "fit() (deel.puncc.regression.enbpi method)": [[11, "deel.puncc.regression.EnbPI.fit"]], "fit() (deel.puncc.regression.locallyadaptivecp method)": [[11, "deel.puncc.regression.LocallyAdaptiveCP.fit"]], "fit() (deel.puncc.regression.splitcp method)": [[11, "deel.puncc.regression.SplitCP.fit"]], "get_nonconformity_scores() (deel.puncc.regression.cqr method)": [[11, "deel.puncc.regression.CQR.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.cvplus method)": [[11, "deel.puncc.regression.CVPlus.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.locallyadaptivecp method)": [[11, "deel.puncc.regression.LocallyAdaptiveCP.get_nonconformity_scores"]], "get_nonconformity_scores() (deel.puncc.regression.splitcp method)": [[11, "deel.puncc.regression.SplitCP.get_nonconformity_scores"]], "predict() (deel.puncc.regression.adaptiveenbpi method)": [[11, "deel.puncc.regression.AdaptiveEnbPI.predict"]], "predict() (deel.puncc.regression.cqr method)": [[11, "deel.puncc.regression.CQR.predict"]], "predict() (deel.puncc.regression.cvplus method)": [[11, "deel.puncc.regression.CVPlus.predict"]], "predict() (deel.puncc.regression.enbpi method)": [[11, "deel.puncc.regression.EnbPI.predict"]], "predict() (deel.puncc.regression.locallyadaptivecp method)": [[11, "deel.puncc.regression.LocallyAdaptiveCP.predict"]], "predict() (deel.puncc.regression.splitcp method)": [[11, "deel.puncc.regression.SplitCP.predict"]], "basesplitter (class in splitting)": [[12, "splitting.BaseSplitter"]], "idsplitter (class in splitting)": [[12, "splitting.IdSplitter"]], "kfoldsplitter (class in splitting)": [[12, "splitting.KFoldSplitter"]], "randomsplitter (class in splitting)": [[12, "splitting.RandomSplitter"]], "__call__() (splitting.idsplitter method)": [[12, "splitting.IdSplitter.__call__"]], "__call__() (splitting.kfoldsplitter method)": [[12, "splitting.KFoldSplitter.__call__"]], "__call__() (splitting.randomsplitter method)": [[12, "splitting.RandomSplitter.__call__"]], "alpha_calib_check() (in module deel.puncc.api.utils)": [[14, "deel.puncc.api.utils.alpha_calib_check"]], "quantile() (in module deel.puncc.api.utils)": [[14, "deel.puncc.api.utils.quantile"]]}})